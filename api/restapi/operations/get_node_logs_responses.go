// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/node-manager-plugin/api/models"
)

// GetNodeLogsOKCode is the HTTP code returned for type GetNodeLogsOK
const GetNodeLogsOKCode int = 200

/*
GetNodeLogsOK Logs retrieved successfully

swagger:response getNodeLogsOK
*/
type GetNodeLogsOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetNodeLogsOK creates GetNodeLogsOK with default headers values
func NewGetNodeLogsOK() *GetNodeLogsOK {

	return &GetNodeLogsOK{}
}

// WithPayload adds the payload to the get node logs o k response
func (o *GetNodeLogsOK) WithPayload(payload string) *GetNodeLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get node logs o k response
func (o *GetNodeLogsOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodeLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNodeLogsInternalServerErrorCode is the HTTP code returned for type GetNodeLogsInternalServerError
const GetNodeLogsInternalServerErrorCode int = 500

/*
GetNodeLogsInternalServerError Error retrieving logs

swagger:response getNodeLogsInternalServerError
*/
type GetNodeLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNodeLogsInternalServerError creates GetNodeLogsInternalServerError with default headers values
func NewGetNodeLogsInternalServerError() *GetNodeLogsInternalServerError {

	return &GetNodeLogsInternalServerError{}
}

// WithPayload adds the payload to the get node logs internal server error response
func (o *GetNodeLogsInternalServerError) WithPayload(payload *models.Error) *GetNodeLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get node logs internal server error response
func (o *GetNodeLogsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodeLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
