version: "3"

vars:
  APP_NAME: node-manager-plugin
  BIN_DIR: build
  MAINNET_VERSION: "MAIN.3.0"
  BUILDNET_VERSION: "DEVN.28.3"

tasks:
  install:
    cmds:
      - cmd: go install github.com/go-swagger/go-swagger/cmd/swagger@latest
      - cmd: echo "PATH=$PATH"
      - cmd: echo "GOPATH=$GOPATH"

  generate:
    cmds:
      - cmd: mkdir -p ./build
      - cmd: go generate -x -v ./...
      - cmd: echo "PATH=$PATH"
      - cmd: echo "GOPATH=$GOPATH"

  setup-node-folder:
    cmds:
      - cmd: mkdir -p {{.NODE_MASSA_DIR}} && cd {{.NODE_MASSA_DIR}}

      # linux and darwin
      - cmd: curl -Ls -o {{.MAINNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.MAINNET_VERSION}}/{{.MAINNET_NODEBIN}}
        platforms: [linux, darwin]
      - cmd: mkdir -p {{.MAINNET_VERSION}} && tar -xzf {{.MAINNET_NODEBIN}} -C {{.MAINNET_VERSION}} massa/massa-node --strip-components=1 && rm {{.MAINNET_NODEBIN}}
        platforms: [linux, darwin]
      - cmd: curl -Ls -o {{.BUILDNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.BUILDNET_VERSION}}/{{.BUILDNET_NODEBIN}}
        platforms: [linux, darwin]
      - cmd: mkdir -p {{.BUILDNET_VERSION}} && tar -xzf {{.BUILDNET_NODEBIN}} -C {{.BUILDNET_VERSION}} massa/massa-node --strip-components=1 && rm {{.BUILDNET_NODEBIN}} 
        platforms: [linux, darwin]

      # window
      - cmd: curl.exe -Ls -o {{.MAINNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.MAINNET_VERSION}}/{{.MAINNET_NODEBIN}}
        platforms: [windows]
      - cmd: mkdir {{.MAINNET_VERSION}} && powershell -Command "Expand-Archive -Path {{.MAINNET_NODEBIN}} -DestinationPath {{.MAINNET_VERSION}}; Remove-Item {{.MAINNET_NODEBIN}}"
        platforms: [windows]
      - cmd: curl.exe -Ls -o {{.BUILDNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.BUILDNET_VERSION}}/{{.BUILDNET_NODEBIN}}
        platforms: [windows]
      - cmd: mkdir {{.BUILDNET_VERSION}} && powershell -Command "Expand-Archive -Path {{.BUILDNET_NODEBIN}} -DestinationPath {{.BUILDNET_VERSION}}; Remove-Item {{.BUILDNET_NODEBIN}}"
        platforms: [windows]

      # move buildnet and mainnet bin into the NODE_MASSA_DIR directory.
      - cmd: rm -rf {{.NODE_MASSA_DIR}}/* && mv {{.BUILDNET_VERSION}} {{.NODE_MASSA_DIR}} && mv {{.MAINNET_VERSION}} {{.NODE_MASSA_DIR}}

    vars:
      NODE_MASSA_DIR: '{{.BIN_DIR}}/node-massa'
      OS_NAME: '{{if eq OS "darwin"}}macos{{else}}{{OS}}{{end}}'
      ARCHIVE_EXT: '{{if eq OS "windows"}}zip{{else}}tar.gz{{end}}'
      MAINNET_NODEBIN: "massa_{{.MAINNET_VERSION}}_release_{{.OS_NAME}}.{{.ARCHIVE_EXT}}"
      BUILDNET_NODEBIN: "massa_{{.BUILDNET_VERSION}}_release_{{.OS_NAME}}.{{.ARCHIVE_EXT}}"


  setup-node-folder:windows: # TODO: check it work on window
    internal: true
    platforms: [windows]
    dir: '{{.NODE_MASSA_DIR}}'
    cmds:
      - cmd: curl.exe -Ls -o {{.MAINNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.MAINNET_VERSION}}/{{.MAINNET_NODEBIN}}
      - cmd: mkdir {{.MAINNET_VERSION}} && powershell -Command "Expand-Archive -Path {{.MAINNET_NODEBIN}} -DestinationPath {{.MAINNET_VERSION}}; Remove-Item {{.MAINNET_NODEBIN}}"
      - cmd: curl.exe -Ls -o {{.BUILDNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.BUILDNET_VERSION}}/{{.BUILDNET_NODEBIN}}
      - cmd: mkdir {{.BUILDNET_VERSION}} && powershell -Command "Expand-Archive -Path {{.BUILDNET_NODEBIN}} -DestinationPath {{.BUILDNET_VERSION}}; Remove-Item {{.BUILDNET_NODEBIN}}"
    vars:
      MAINNET_NODEBIN: "massa_{{.MAINNET_VERSION}}_release_windows.zip"
      BUILDNET_NODEBIN: "massa_{{.BUILDNET_VERSION}}_release_windows.zip"

  setup-node-folder:linux:
    platforms: [linux]
    cmds:
      - task: setup-node-folder:unix
        vars:
          UNIX_OS: "linux"

  setup-node-folder:macos:
    platforms: [darwin]
    cmds:
      - task: setup-node-folder:unix
        vars:
          UNIX_OS: "macos"

  setup-node-folder:unix:
    internal: true
    platforms: [linux, darwin]
    dir: '{{.NODE_MASSA_DIR}}'
    cmds:
      - cmd: curl -Ls -o {{.MAINNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.MAINNET_VERSION}}/{{.MAINNET_NODEBIN}}
      - cmd: mkdir -p {{.MAINNET_VERSION}} && tar -xzf {{.MAINNET_NODEBIN}} -C {{.MAINNET_VERSION}} massa/massa-node --strip-components=1 && rm {{.MAINNET_NODEBIN}}
      - cmd: curl -Ls -o {{.BUILDNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.BUILDNET_VERSION}}/{{.BUILDNET_NODEBIN}}
      - cmd: mkdir -p {{.BUILDNET_VERSION}} && tar -xzf {{.BUILDNET_NODEBIN}} -C {{.BUILDNET_VERSION}} massa/massa-node --strip-components=1 && rm {{.BUILDNET_NODEBIN}} 
    vars:
      MAINNET_NODEBIN: "massa_{{.MAINNET_VERSION}}_release_{{.UNIX_OS}}.tar.gz"
      BUILDNET_NODEBIN: "massa_{{.BUILDNET_VERSION}}_release_{{.UNIX_OS}}.tar.gz"
  
  run:
    cmds:
      - cmd: ./build/node-manager-plugin
    env:
      STANDALONE: 1
      LOG_LEVEL: DEBUG

  build-backend:
    build:
    desc: Internal build task
    cmds:
      - cmd: echo Building node-manager {{.APP_NAME}} for {{.OS | default OS}}/{{.ARCH | default ARCH}}
        silent: true
      - cmd: 'echo Mode: {{if eq .PRODUCTION "true"}}Production{{else}}Development{{end}}'
        silent: true
      - cmd: 'echo Version: {{.VERSION | default "Development"}}'
        silent: true
      - cmd: go build {{.BUILD_FLAGS}} -o {{.BIN_DIR}}/{{.APP_NAME}}{{.BIN_EXT}} ./main.go
    vars:
      PRODUCTION: '{{if ne .VERSION nil}}{{if ne .VERSION ""}}true{{end}}{{end}}'
      VERSION_FLAG: '{{if ne .VERSION nil}}{{if ne .VERSION ""}}-X github.com/massalabs/node-manager-plugin/int/config.Version=v{{.VERSION}}{{end}}{{end}}'
      BUILD_FLAGS: '{{if eq .PRODUCTION "true"}}-tags production {{end}}-ldflags="{{.VERSION_FLAG}}{{if eq .PRODUCTION "true"}} -w -s{{end}}"'
      BIN_EXT: '{{if eq .OS "windows"}}.exe{{end}}'
    env:
      GOOS: "{{.OS | default OS}}"
      GOARCH: "{{.ARCH | default ARCH}}"
      VERSION: "{{.VERSION | default nil}}"

  build-frontend:
    dir: web
    cmds:
      - cmd: npm run build{{.BUILD_MODE}}
    vars:
      BUILD_MODE: '{{if eq .STANDALONE 1}}:standalone{{end}}'
  
  build:
    cmds:
      - task: build-frontend
      - task: build-backend
    

  build-standalone:
    cmds:
      - task: build-frontend
        vars:
          STANDALONE: 1
      - task: build-backend
      
          
  clean:
    cmds:
      - cmd: rm -rf build

  install-plugin:
    cmds:
      - cmd: mkdir -p /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp build/node-manager-plugin /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp web/public/favicon.ico /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp manifest.json /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp -r build/node-massa /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]

      - cmd: mkdir -p "C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin"
        platforms: [windows]
      - cmd: cp build/node-manager-plugin.exe "C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin"
        platforms: [windows]
      - cmd: cp web/public/favicon.ico "C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin"
        platforms: [windows]
      - cmd: cp manifest.json "C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin"
        platforms: [windows]
      - cmd: robocopy build/node-massa "C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin/node-massa" /E
        platforms: [windows]

  test:
    cmds:
      - cmd: go test ./...

  install:tools:
    cmds:
      - cmd: go install mvdan.cc/gofumpt@latest
      - cmd: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  lint:
    cmds:
      - cmd: golangci-lint run

  fmt:
    cmds:
      - cmd: go mod tidy
      - cmd: gofumpt -l -w .
      - cmd: gci write . --skip-generated
      - cmd: golangci-lint run --fix
      - cmd: cd web && npm run fmt
