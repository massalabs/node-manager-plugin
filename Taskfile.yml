version: "3"

vars:
  APP_NAME: node-manager-plugin
  BIN_DIR: build
  MAINNET_VERSION: "MAIN.3.0"
  BUILDNET_VERSION: "DEVN.28.16"
  NODE_MASSA_DIR: "build/node-massa"

tasks:
  install:
    cmds:
      - cmd: go install github.com/go-swagger/go-swagger/cmd/swagger@latest
      - cmd: go install github.com/vektra/mockery/v3@v3.5.0
      - cmd: go install mvdan.cc/gofumpt@v0.8.0
      - cmd: go install github.com/daixiang0/gci@v0.13.4 
      - cmd: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.3.0
      - cmd: echo "PATH=$PATH"
      - cmd: echo "GOPATH=$GOPATH"

  generate:
    cmds:
      - cmd: go generate -x -v ./...
      - cmd: echo "PATH=$PATH"
      - cmd: echo "GOPATH=$GOPATH"
      - task: generate-mocks

  generate-mocks:
    cmds:
      - cmd: mockery

  generate-test-data:
    cmds:
      - cmd: go run int/db/test_data/generate_test_data.go

  setup-node-folder:
    cmds:
      - cmd: scripts/setup-node-unix.sh {{.MAINNET_VERSION}} {{.BUILDNET_VERSION}} {{.MAINNET_NODEBIN}} {{.BUILDNET_NODEBIN}} {{.NODE_MASSA_DIR}}
        platforms: [linux, darwin]

      # window
      ## create the NODE_MASSA_DIR directory inside the BIN_DIR directory
      - cmd: powershell -Command "New-Item -Path '{{.NODE_MASSA_DIR}}' -ItemType Directory -Force"
        platforms: [windows]

      ## handle mainnet
      ### extract the mainnet node binary zip file and remove the zip file
      - cmd: curl.exe -Ls -o {{.MAINNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.MAINNET_VERSION}}/{{.MAINNET_NODEBIN}}
        platforms: [windows]
      ### "mv <mainnetDir>/massa/* <mainnetDir>/" and remove the <mainnetDir>/massa/ directory
      - cmd: powershell -Command "New-Item -Path '{{.MAINNET_VERSION}}' -ItemType Directory -Force; Expand-Archive -Path '{{.MAINNET_NODEBIN}}' -DestinationPath '{{.MAINNET_VERSION}}'; Remove-Item '{{.MAINNET_NODEBIN}}'"
        platforms: [windows]
      ### "mv <mainnetDir>/massa/* <mainnetDir>/" and remove the <mainnetDir>/massa/ directory
      - cmd: powershell -Command "Move-Item -Path '{{.MAINNET_VERSION}}\massa\*' -Destination '{{.MAINNET_VERSION}}'; Remove-Item -Path '{{.MAINNET_VERSION}}\massa' -Recurse -Force"
        platforms: [windows]
      
      ## handle buildnet
      ### download the buildnet node binary zip file
      - cmd: curl.exe -Ls -o {{.BUILDNET_NODEBIN}} https://github.com/massalabs/massa/releases/download/{{.BUILDNET_VERSION}}/{{.BUILDNET_NODEBIN}}
        platforms: [windows]
      ### extract the buildnet node binary zip file and remove the zip file
      - cmd: powershell -Command "New-Item -Path '{{.BUILDNET_VERSION}}' -ItemType Directory -Force; Expand-Archive -Path '{{.BUILDNET_NODEBIN}}' -DestinationPath '{{.BUILDNET_VERSION}}'; Remove-Item '{{.BUILDNET_NODEBIN}}'"
        platforms: [windows]
      ### "mv <buildnetDir>/massa/* <buildnetDir>/" and remove the <buildnetDir>/massa/ directory
      - cmd: powershell -Command "Move-Item -Path '{{.BUILDNET_VERSION}}\massa\*' -Destination '{{.BUILDNET_VERSION}}'; Remove-Item -Path '{{.BUILDNET_VERSION}}\massa' -Recurse -Force"
        platforms: [windows]

      # move buildnet and mainnet folder into the NODE_MASSA_DIR directory.
      - cmd:  powershell -Command "Remove-Item -Path '{{.NODE_MASSA_DIR}}\*' -Recurse -Force; Move-Item -Path '{{.BUILDNET_VERSION}}' -Destination '{{.NODE_MASSA_DIR}}'; Move-Item -Path '{{.MAINNET_VERSION}}' -Destination '{{.NODE_MASSA_DIR}}'"
        platforms: [windows]

    vars:
      OS_NAME: '{{if eq OS "darwin"}}macos{{else}}{{OS}}{{end}}'
      ARCHIVE_EXT: '{{if eq OS "windows"}}zip{{else}}tar.gz{{end}}'
      MAINNET_NODEBIN: "massa_{{.MAINNET_VERSION}}_release_{{.OS_NAME}}.{{.ARCHIVE_EXT}}"
      BUILDNET_NODEBIN: "massa_{{.BUILDNET_VERSION}}_release_{{.OS_NAME}}.{{.ARCHIVE_EXT}}"

  # This task is used to setup windows node binaries in linux environment.
  # It is used in github action workflow ci
  ci-setup-windows-node-with-unix:
    platforms: [linux]
    cmds:
      - cmd: scripts/ci-setup-node-from-linux.sh {{.MAINNET_VERSION}} {{.BUILDNET_VERSION}} {{.NODE_MASSA_DIR}}
    vars:
      MAINNET_NODEBIN: "massa_{{.MAINNET_VERSION}}_release_windows.zip"
      BUILDNET_NODEBIN: "massa_{{.BUILDNET_VERSION}}_release_windows.zip"
  
  run:
    cmds:
      - cmd: ./build/node-manager-plugin
    env:
      STANDALONE: 1
      LOG_LEVEL: DEBUG

  build-backend:
    build:
    desc: Internal build task
    cmds:
      - cmd: 'echo Building node-manager {{.APP_NAME}} for $GOOS/$GOARCH'
        silent: true
      - cmd: 'echo Mode: {{if eq .PRODUCTION "true"}}Production{{else}}Development{{end}}'
        silent: true
      - cmd: 'echo Version: {{.VERSION | default "Development"}}'
        silent: true
      - cmd: go build {{.BUILD_FLAGS}} -o {{.BIN_DIR}}/{{.APP_NAME}}{{.BIN_EXT}} ./main.go
    vars:
      PRODUCTION: '{{if ne .VERSION nil}}{{if ne .VERSION ""}}true{{end}}{{end}}'
      VERSION_FLAG: '{{if ne .VERSION nil}}{{if ne .VERSION ""}}-X github.com/massalabs/node-manager-plugin/int/config.Version={{.VERSION}}{{end}}{{end}}'
      BUILD_FLAGS: '{{if eq .PRODUCTION "true"}}-tags production {{end}}-ldflags="{{.VERSION_FLAG}}{{if eq .PRODUCTION "true"}} -w -s{{end}}"'
      BIN_EXT: '{{if eq .OS "windows"}}.exe{{end}}'
    env:
      GOOS: "{{if eq .OS \"Windows_NT\"}}windows{{else}}{{.OS | default OS}}{{end}}"
      GOARCH: "{{.ARCH | default ARCH}}"
      VERSION: "{{.VERSION | default nil}}"

  build-frontend:
    dir: web
    cmds:
      - cmd: npm run build{{.BUILD_MODE}}
    vars:
      BUILD_MODE: '{{if eq .STANDALONE 1}}:standalone{{end}}'
  
  build:
    cmds:
      - task: build-frontend
      - task: build-backend
    

  build-standalone:
    cmds:
      - task: build-frontend
        vars:
          STANDALONE: 1
      - task: build-backend
      
          
  clean:
    cmds:
      - cmd: rm -rf build && rm -rf web/node_modules && rm -rf int/api/html/dist

  install-plugin:
    cmds:
      - cmd: mkdir -p /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp build/node-manager-plugin /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp web/public/favicon.svg /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp manifest.json /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]
      - cmd: cp -r build/node-massa /usr/local/share/massastation/plugins/node-manager-plugin
        platforms: [linux, darwin]

      - cmd: powershell -Command "New-Item -Path 'C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin' -ItemType Directory -Force"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'build/node-manager-plugin.exe' -Destination 'C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin' -Force"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'web/public/favicon.svg' -Destination 'C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin' -Force"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'manifest.json' -Destination 'C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin' -Force"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'build/node-massa' -Destination 'C:/Program Files (x86)/MassaStation/plugins/node-manager-plugin/node-massa' -Recurse -Force"
        platforms: [windows]

  test:
    cmds:
      - cmd: go test ./...

  lint:
    cmds:
      - cmd: golangci-lint run

  fmt:
    cmds:
      - cmd: go mod tidy
      - cmd: gofumpt -l -w .
      - cmd: gci write . --skip-generated
      - cmd: golangci-lint run --fix
      - cmd: cd web && npm run fmt
